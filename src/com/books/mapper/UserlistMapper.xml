<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.books.mapper.UserlistMapper" >
  <resultMap id="BaseResultMap" type="com.books.po.Userlist" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="upwd" property="upwd" jdbcType="VARCHAR" />
    <result column="uaddress" property="uaddress" jdbcType="VARCHAR" />
    <result column="uzip" property="uzip" jdbcType="VARCHAR" />
    <result column="uphone" property="uphone" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="identification" property="identification" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, uname, upwd, uaddress, uzip, uphone, gender, birthday, identification
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.books.po.UserlistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
 
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userlist
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.books.po.UserlistExample" >
    delete from userlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.books.po.Userlist" >
    insert into userlist (uid, uname, upwd, 
      uaddress, uzip, uphone, 
      gender, birthday, identification
      )
    values (#{uid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{upwd,jdbcType=VARCHAR}, 
      #{uaddress,jdbcType=VARCHAR}, #{uzip,jdbcType=VARCHAR}, #{uphone,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{identification,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.books.po.Userlist" >
    insert into userlist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="upwd != null" >
        upwd,
      </if>
      <if test="uaddress != null" >
        uaddress,
      </if>
      <if test="uzip != null" >
        uzip,
      </if>
      <if test="uphone != null" >
        uphone,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="identification != null" >
        identification,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upwd != null" >
        #{upwd,jdbcType=VARCHAR},
      </if>
      <if test="uaddress != null" >
        #{uaddress,jdbcType=VARCHAR},
      </if>
      <if test="uzip != null" >
        #{uzip,jdbcType=VARCHAR},
      </if>
      <if test="uphone != null" >
        #{uphone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="identification != null" >
        #{identification,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.books.po.UserlistExample" resultType="java.lang.Integer" >
    select count(*) from userlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userlist
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.uname != null" >
        uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.upwd != null" >
        upwd = #{record.upwd,jdbcType=VARCHAR},
      </if>
      <if test="record.uaddress != null" >
        uaddress = #{record.uaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.uzip != null" >
        uzip = #{record.uzip,jdbcType=VARCHAR},
      </if>
      <if test="record.uphone != null" >
        uphone = #{record.uphone,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.identification != null" >
        identification = #{record.identification,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userlist
    set uid = #{record.uid,jdbcType=INTEGER},
      uname = #{record.uname,jdbcType=VARCHAR},
      upwd = #{record.upwd,jdbcType=VARCHAR},
      uaddress = #{record.uaddress,jdbcType=VARCHAR},
      uzip = #{record.uzip,jdbcType=VARCHAR},
      uphone = #{record.uphone,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      identification = #{record.identification,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.books.po.Userlist" >
    update userlist
    <set >
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upwd != null" >
        upwd = #{upwd,jdbcType=VARCHAR},
      </if>
      <if test="uaddress != null" >
        uaddress = #{uaddress,jdbcType=VARCHAR},
      </if>
      <if test="uzip != null" >
        uzip = #{uzip,jdbcType=VARCHAR},
      </if>
      <if test="uphone != null" >
        uphone = #{uphone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="identification != null" >
        identification = #{identification,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.books.po.Userlist" >
    update userlist
    set uname = #{uname,jdbcType=VARCHAR},
      upwd = #{upwd,jdbcType=VARCHAR},
      uaddress = #{uaddress,jdbcType=VARCHAR},
      uzip = #{uzip,jdbcType=VARCHAR},
      uphone = #{uphone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
    where uid = #{uid,jdbcType=INTEGER}
  </update>
   <select id="selectUser" parameterType="String" resultType="Userlist">
    select * from userlist where uid =  #{uid,jdbcType=INTEGER}
  </select>
  <select id="findUser" parameterType="String" resultType="Userlist">
		select uphone,upwd,uname,uid from userlist where uphone = #{arg0} and upwd = #{arg1}
	</select>
	<insert id="insertUser" parameterType="com.books.po.Userlist" >
    insert into userlist(uname,uphone, upwd)
    values (#{uname},#{uphone},#{upwd})
  </insert>
  <select id = "showAdmin" resultMap="BaseResultMap" >
  		select uid,uname,uaddress,uzip,uphone,birthday from userlist where identification = 0
  </select>
  <select id = "showUser" resultMap="BaseResultMap" >
  		select uid,uname,uaddress,uzip,uphone,birthday from userlist where identification = 1
  </select>
</mapper>